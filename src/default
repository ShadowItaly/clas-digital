##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
#
proxy_cache_path  /etc/nginx/cache  levels=1:2    keys_zone=STATIC:10m
    inactive=24h  max_size=1g;

server {
    listen 80 default_server;

    server_name _;

    return 301 https://$host$request_uri;
}

server {
	listen 9991 ssl;
	listen [::]:9991 ssl;
	server_name clas-digital.uni-frankfurt.de;
	return 301 https://www.clas-digital.uni-frankfurt.de:9991$request_uri;
}

server {
	listen 443 ssl;
	listen [::]:443 ssl;
	server_name clas-digital.uni-frankfurt.de;
	return 301 https://www.clas-digital.uni-frankfurt.de$request_uri;
}

#Development server!
server {
	listen 9991 ssl default_server;
	listen [::]:9991 ssl default_server;

	# SSL configuration
	#
	# listen 443 ssl default_server;
	# listen [::]:443 ssl default_server;
	#
	# Note: You should disable gzip for SSL traffic.
	# See: https://bugs.debian.org/773332
	#
	# Read up on ssl_ciphers to ensure a secure configuration.
	# See: https://bugs.debian.org/765782
	#
	# Self signed certs generated by the ssl-cert package
	# Don't use them in a production server!
	#
	# include snippets/snakeoil.conf;
	
	root /etc/clas-digital-devel/web;

	# Add index.php to the list if you are using PHP
	#index Search.html;
	error_page 502 /custom_error502.html;

	ssl on;
        ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers         "HIGH:!aNULL:!MD5 or HIGH:!aNULL:!MD5:!3DES";
        ssl_certificate     /etc/clas-digital/bin/cert.pem;
        ssl_certificate_key /etc/clas-digital/bin/key.pem;
	server_name www.clas-digital.uni-frankfurt.de;

	charset utf-8;
	
	autoindex on;
	autoindex_exact_size off;
	autoindex_format html;
	autoindex_localtime on;

	include /etc/clas-digital-devel/bin/forbiddenfiles;
	location = /GetBooks.html {
		set $new_url https://$host:$server_port/books/$arg_scanId/pages;
		
		if ($arg_query) {
			set $new_url $new_url?highlight=$arg_query;
		}

		if ($arg_fuzzyness) {
			set $new_url $new_url&fuzzyness=$arg_fuzzyness;
		}
		
		if ($arg_scanId) {
			return 301 $new_url;
		}
		return 404;
	}
	
	location = /ShowMetadata.html {
		if ($arg_scanId) {
			return 301 https://$host:$server_port/books/$arg_scanId;
		}
		return 404;
	}

	location ~ /books/[a-zA-Z0-9]+/(view|pages|intern)/.* {
	    auth_request /authenticate;
	}

	location /upload {
		client_max_body_size 10M;
        	proxy_pass         http://localhost:9992;
	}


    	location /api {
        	proxy_pass         http://localhost:9992;
	} 

	location /userlist {
        	proxy_pass         http://localhost:9992;
	}

		
	location /private/ {
        	auth_request         /authenticate;
	}

	location /createbibliography {
        	proxy_pass         http://localhost:9992;
	}

	location /login {
        	proxy_pass         http://localhost:9992;
	}	

	location /searchinbook {
        	proxy_pass         http://localhost:9992;
	}
	location /getmetadata {
        	proxy_pass         http://localhost:9992;
	}
	
	location /information/ {
	    disable_symlinks off;
	    index index.html index.de.html;
	    try_files $uri $uri/ =404;
	}


	location /search {
        	proxy_pass         http://localhost:9992;
 #       	proxy_cache_key $uri$is_args$args;
#		proxy_buffering        on;
#            	proxy_cache            STATIC;
#            	proxy_cache_valid      200  1d;
#            	proxy_cache_use_stale  error timeout invalid_header updating
#                                   http_500 http_502 http_503 http_504;
	}

location /getsugg {
        	proxy_pass         http://localhost:9992;
	}

	location /authenticate {
		internal;
        	proxy_pass         http://localhost:9992/authenticate$request_uri;
	}
	
	location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		try_files $uri $uri/ =404;
	}
}

server {
	listen 443 ssl default_server;
	listen [::]:443 ssl default_server;

	# SSL configuration
	#
	# listen 443 ssl default_server;
	# listen [::]:443 ssl default_server;
	#
	# Note: You should disable gzip for SSL traffic.
	# See: https://bugs.debian.org/773332
	#
	# Read up on ssl_ciphers to ensure a secure configuration.
	# See: https://bugs.debian.org/765782
	#
	# Self signed certs generated by the ssl-cert package
	# Don't use them in a production server!
	#
	# include snippets/snakeoil.conf;
	
	root /etc/clas-digital/web;

	# Add index.php to the list if you are using PHP
	#index Search.html;
	error_page 502 /custom_error502.html;

	ssl on;
        ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
        ssl_ciphers         "HIGH:!aNULL:!MD5 or HIGH:!aNULL:!MD5:!3DES";
        ssl_certificate     /etc/clas-digital/bin/cert.pem;
        ssl_certificate_key /etc/clas-digital/bin/key.pem;
	server_name www.clas-digital.uni-frankfurt.de;
	
	charset utf-8;

	autoindex on;
	autoindex_exact_size off;
	autoindex_format html;
	autoindex_localtime on;

	include /etc/clas-digital/bin/forbiddenfiles;

	# https://github.com/ShadowItaly/clas-digital/issues/168
	port_in_redirect off;
	if ($host = ".*:1409") {
		return 301 https://www.clas-digital.uni-frankfurt.de$request_uri;
	}

	if ($arg_query) {
		set $query_args ?highlight=$arg_query;
	}
	if ($arg_fuzzyness) {
		set $query_args $query_args&fuzzyness=$arg_fuzzyness;
	}
	if ($uri = "/GetBooks.html") {
		return 301 https://$host/books/$arg_scanId/pages$query_args;
	}

	if ($uri = "/ShowMetadata.html") {
		return 301 https://$host/books/$arg_scanId;
	}

	location ~ /books/[a-zA-Z0-9]+/(view|pages|intern)/.* {
	    auth_request /authenticate;
	}

	location /upload {
		client_max_body_size 10M;
        	proxy_pass         http://localhost:9000;
	}


    	location /api {
        	proxy_pass         http://localhost:9000;
	} 

	location /userlist {
        	proxy_pass         http://localhost:9000;
	}

		
	location /private/ {
        	auth_request         /authenticate;
	}

	location /createbibliography {
        	proxy_pass         http://localhost:9000;
	}

	location /login {
        	proxy_pass         http://localhost:9000;
	}	

	location /searchinbook {
        	proxy_pass         http://localhost:9000;
	}
	location /getmetadata {
        	proxy_pass         http://localhost:9000;
	}
	
	location /information/ {
	    disable_symlinks off;
	    index index.html index.de.html;
	    try_files $uri $uri/ =404;
	}


	location /search {
        	proxy_pass         http://localhost:9000;
 #       	proxy_cache_key $uri$is_args$args;
#		proxy_buffering        on;
#            	proxy_cache            STATIC;
#            	proxy_cache_valid      200  1d;
#            	proxy_cache_use_stale  error timeout invalid_header updating
#                                   http_500 http_502 http_503 http_504;
	}

location /getsugg {
        	proxy_pass         http://localhost:9000;
	}

	location /authenticate {
		internal;
        	proxy_pass         http://localhost:9000/authenticate$request_uri;
	}
	
	location / {
		# First attempt to serve request as file, then
		# as directory, then fall back to displaying a 404.
		try_files $uri $uri/ =404;
	}
}


# Virtual Host configuration for example.com
#
# You can move that to a different file under sites-available/ and symlink that
# to sites-enabled/ to enable it.
#
#server {
#	listen 80;
#	listen [::]:80;
#
#	server_name example.com;
#
#	root /var/www/example.com;
#	index index.html;
#
#	location / {
#		try_files $uri $uri/ =404;
#	}
#}
